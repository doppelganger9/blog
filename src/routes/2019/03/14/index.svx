---
title: Using reveal-md with emojis everywhere!
date: 2019-03-14T20:30:03
published: true
description: A post about how I made emojis available on all OSes and browsers for reveal-md.
tags: reveal-md, technical presentations, tools, emoji, pdf, static website
lang: en
keywords: reveal, revealJS, reveal-js, reveal-md, markdown, technical presentations, technical slides, technical slideshow, tools, emojis, twitter, twitter emojis, twemoji, twimoji, pdf
slug: 2019/03/14
---


[Last time](/2019/03/12) I presented you the awesome **reveal-md** tool that I use to create impressive technical slideshows.

One of the things I use too much is emojis.
I tend to put them everywhere possible, for me they are like a form of modern ideograms that future generations will find etched on glass pyramids...

https://giphy.com/gifs/animation-loop-26AHRhriag6RPO7GU

However, for the time being, I still have an issue with [how emojis are supported](https://en.wikipedia.org/wiki/Emoji).

Going back to **reveal-md**, when I exported to PDF, the emojis were broken, and the same thing happened for my Windows 7 co-workers when they were looking at the exported website or when I was presenting from that kind of OS.

Thus, I was in need of a way to transform emojis to images inside my presentations.

Time to present item number 9 on my "I ‚ù§Ô∏è reveal" list of reveal's preferred feature!

https://giphy.com/gifs/spongebob-season-4-spongebob-squarepants-xTk2YUwApvZyGiul32

## Preprocessor to the rescue

**reveal-md** [has a preprocessor option](https://github.com/webpro/reveal-md#pre-process-markdown) that allow us to pass it a JavaScript file that will apply some code to change the markdown before presenting it. And, this my dear reader, is exactly what I needed to solve my emojis issue!

Combined with **[Twemoji](https://github.com/twitter/twemoji)**, I could parse all my presentation's markdown and convert emoji Unicode strings to image tags with SVG.

https://giphy.com/gifs/thedailyshow-5bivKwxhVzshNk2Rjw

## Twemoji

### What is it?

It is [an open source library made by Twitter](https://twemoji.twitter.com/).
It contains their whole collection of emojis!
There is also a JavaScript API that can parse text or DOM nodes to replace emoji Unicode characters with <img> tags.

Here is the attribution:
> Copyright 2018 Twitter, Inc and other contributors
> Code licensed under the MIT License: http://opensource.org/licenses/MIT
> Graphics licensed under CC-BY 4.0: https://creativecommons.org/licenses/by/4.0/

Thank you Twitter üòò

### Installation

So, I installed it in my repo using:

```
npm install --save twemoji
```

## Free the emojis!

Now we can look at how we will combine **Twemoji** with a **reveal-md** preprocessor to make the emojis free from the OS and browsers!

### reveal-md Preprocessor using twemoji

The preprocessor is really simple:

```javascript
// emoji2svgimg.js
const twemoji = require('twemoji');

module.exports = (markdown, options) => {
  return new Promise((resolve, reject) => {
    return resolve(
      twemoji.parse(markdown, {
        folder: 'svg',
        ext: '.svg'
      })
    );
  });
};
```

As you see it returns the Promise that it will have transformed the markdown using `twemoji.parse`.

Wait a minute.

https://giphy.com/gifs/mrw-birthday-thinking-9aDBfz8iy4caA

If you don't know **Promises**, I urge you to go watch this YouTube video -- MPJ is just ü§©

https://www.youtube.com/watch?v=2d7s3spWAzo

I also recommend to subscribe to his channel, all the content is stellar üí´.

### SVG FTW!

For better antialiasing (because you can zoom with ALT+click using Reveal-md presentation mode) I used SVG [with these special parser options](https://github.com/twitter/twemoji#folder):

```
twemoji.parse(markdown, {
        folder: 'svg',
        ext: '.svg'
      })
```

### using the preprocessor

To use this, append the `--preprocessor` command line option for reveal-md:

```bash
reveal-md presentation.md --preprocessor emoji2svgimg.js
```

Looking at my presentation, I saw a few regressions happening to the emojis: the CSS seemed wrong, and the [animated fragments](https://github.com/hakimel/reveal.js/#element-attributes) [inside a slide](https://github.com/hakimel/reveal.js/#fragments) was broken.

### Fixing CSS

I had to tweak the CSS for the twemojis to have a size related to the font size. I already had a `local.css` file to tweak CSS for my slides, so I added [the recommended CSS](https://github.com/twitter/twemoji#inline-styles):

```css
img.emoji {
   height: 1em;
   width: 1em;
   margin: 0 .05em 0 .1em;
   vertical-align: -0.1em;
}
```
It did not play well as I had some rules forcing the height of all images... so I had to rewrite this. I learned [a new CSS selector](https://developer.mozilla.org/fr/docs/Web/CSS/:not) on the way, sweet üòé!
```css
img:not(.emoji) {
    height: 200pt !important;
}
```

*Sorry, I promise I won't use `!important` in production ever again*

### Broken fragments

Using fragments in a slide was broken as the `<!-- fragment -->` became applied to the img tag instead of the image.

To solve this issue, I had to change the fragment comment by using more HTML to delineate the fragment that would contain emoji image.

It went from a clean Markdown to an embedded HTML markup with the reveal-md magic fragment comments:

```markdown
1. üîç what is WASM?
<!-- .element: class="fragment" -->
2. üé© History: when did it came to be?
<!-- .element: class="fragment" -->
3. üëÄ what does it look like?
<!-- .element: class="fragment" -->
4. ü§π‚Äç‚ôÄÔ∏è what could it be used for?
<!-- .element: class="fragment" -->
```

became:

```markdown
<ol>
  <li class="fragment"> üîç what is WASM?</li>
  <li class="fragment"> üé© History: when did it came to be?</li>
  <li class="fragment"> üëÄ what does it look like?</li>
  <li class="fragment"> ü§π‚Äç‚ôÄÔ∏è what could it be used for?</li>
</ol>

```

and

```markdown
ü§¢
<!-- .element class="fragment" -->
```

became infected with a mild case of [divitis](https://csscreator.com/divitis):

```markdown
<div class="fragment">ü§¢</div>
```

> Dare I say that I reduced the character count and readability? ü§ê

### exporting to PDF

Exporting the presentation to a PDF works and even, adding the preprocessor solves an old issue on emoji rendering.
Before the preprocessor, emojis were rendered by capturing snapshots of the presentation via [a headless chromium browser](https://github.com/hakimel/reveal.js/#pdf-export).
So.. one less issue: Win! ‚úåÔ∏è

Here is what was added in the NPM scripts to use the preprocessor:

```json
  ...
  "scripts": {
    ...
    "preexport:pdf": "cp presentation.md 2print.md && replace-in-file '/class=\"fragment\"/g' ' ' 2print.md --isRegex",
    "export:pdf": "reveal-md 2print.md -w --css local.css --theme white --print presentation.pdf --preprocessor emoji2svgimg.js",
    "postexport:pdf": "rm 2print.md"
  },
 ...
```

([see my previous post if you want to know more about the other reveal export options and npm scripts](/2019/03/12))

### exporting to an HTML static website

Exporting the presentation to a static website still works.
The links to Twemoji images are external to the site.
For example, the SVG for the üí© is an URL pointing to a CDN URL:

`https://twemoji.maxcdn.com/2/svg/1f4a9.svg`

<img src="https://twemoji.maxcdn.com/2/svg/1f4a9.svg" style="width: 50%" alt="loupe" />

*What a really nice pile of poo! Such smooth anti-aliasing! Thank you so much Scalable Vector Graphics!*
üëç

I also changed the NPM scripts to use the preprocessor:

```json
  ...
  "scripts": {
    ...
    "export:site": "reveal-md presentation.md --css local.css --theme white --static _site --preprocessor emoji2svgimg.js",
    "postexport:site": "cp *.svg _site/ && cp *.png _site/ && cp *.jpg _site/ && cp *.mp4 _site/ && cp robots.txt _site/ && cp *.svg _site/_assets/ && cp *.png _site/_assets/ && cp *.jpg _site/_assets/",
 ...
```

## üéÅ Sample repository

Well, [here is a gift for you](https://github.com/doppelganger9/sample-reveal-md-twemoji-presentation)!

To illustrate this post and the previous one, I made a sample repository. It shows all my adaptations. I use nearly the same at work, branded with my company's logo and colors.

Feel free to use it. It is open source, so you can also contribute by opening issues, asking questions, pushing code via Pull Requests, etc.

You can even see a [sample exported PDF with Twemojis](https://github.com/doppelganger9/sample-reveal-md-twemoji-presentation/blob/master/presentation.pdf) [and without](https://github.com/doppelganger9/sample-reveal-md-twemoji-presentation/blob/master/presentation-without-twemojis.pdf).

Try opening both PDFs on a non-emoji friendly OS for comparison üòâ

## Conclusion

Regarding emojis in reveal-md presentations, PDFs or static website exports, now anyone will be able to enjoy them without depending on their OS/browser!

Particularly those unlucky people stuck on old windows OSes... üòá

> I hope you enjoyed this post! If you have any feedback about how it makes you almost laugh, was useful in any way, want to fix my lame jokes, content, or my English, send me a message on Twitter.

üëã
